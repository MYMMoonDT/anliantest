package edu.tongji.anliantest.model;

// Generated 2014-3-14 19:09:28 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TestDataProcessTable generated by hbm2java
 */
@Entity
@Table(name = "test_data_process_table", catalog = "anliantest")
public class TestDataProcessTable implements java.io.Serializable {

	private int tableId;
	private ProjectInfo projectInfo;
	private EmployeeInfo employeeInfoByReviewerId;
	private EmployeeInfo employeeInfoByCalculaterId;
	private Date calculateTime;
	private Date reviewTime;
	private String tableNum;
	private Set<TestDataProcessGroup> testDataProcessGroups = new HashSet<TestDataProcessGroup>(
			0);

	public TestDataProcessTable() {
	}

	public TestDataProcessTable(int tableId) {
		this.tableId = tableId;
	}

	public TestDataProcessTable(int tableId, ProjectInfo projectInfo,
			EmployeeInfo employeeInfoByReviewerId,
			EmployeeInfo employeeInfoByCalculaterId, Date calculateTime,
			Date reviewTime, String tableNum,
			Set<TestDataProcessGroup> testDataProcessGroups) {
		this.tableId = tableId;
		this.projectInfo = projectInfo;
		this.employeeInfoByReviewerId = employeeInfoByReviewerId;
		this.employeeInfoByCalculaterId = employeeInfoByCalculaterId;
		this.calculateTime = calculateTime;
		this.reviewTime = reviewTime;
		this.tableNum = tableNum;
		this.testDataProcessGroups = testDataProcessGroups;
	}

	@Id
	@Column(name = "table_id", unique = true, nullable = false)
	public int getTableId() {
		return this.tableId;
	}

	public void setTableId(int tableId) {
		this.tableId = tableId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "project_id")
	public ProjectInfo getProjectInfo() {
		return this.projectInfo;
	}

	public void setProjectInfo(ProjectInfo projectInfo) {
		this.projectInfo = projectInfo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "reviewer_id")
	public EmployeeInfo getEmployeeInfoByReviewerId() {
		return this.employeeInfoByReviewerId;
	}

	public void setEmployeeInfoByReviewerId(
			EmployeeInfo employeeInfoByReviewerId) {
		this.employeeInfoByReviewerId = employeeInfoByReviewerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "calculater_id")
	public EmployeeInfo getEmployeeInfoByCalculaterId() {
		return this.employeeInfoByCalculaterId;
	}

	public void setEmployeeInfoByCalculaterId(
			EmployeeInfo employeeInfoByCalculaterId) {
		this.employeeInfoByCalculaterId = employeeInfoByCalculaterId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "calculate_time", length = 19)
	public Date getCalculateTime() {
		return this.calculateTime;
	}

	public void setCalculateTime(Date calculateTime) {
		this.calculateTime = calculateTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "review_time", length = 19)
	public Date getReviewTime() {
		return this.reviewTime;
	}

	public void setReviewTime(Date reviewTime) {
		this.reviewTime = reviewTime;
	}

	@Column(name = "table_num", length = 13)
	public String getTableNum() {
		return this.tableNum;
	}

	public void setTableNum(String tableNum) {
		this.tableNum = tableNum;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "testDataProcessTable")
	public Set<TestDataProcessGroup> getTestDataProcessGroups() {
		return this.testDataProcessGroups;
	}

	public void setTestDataProcessGroups(
			Set<TestDataProcessGroup> testDataProcessGroups) {
		this.testDataProcessGroups = testDataProcessGroups;
	}

}
