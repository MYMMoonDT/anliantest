package edu.tongji.anliantest.model;

// Generated 2014-3-20 17:07:37 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * EmployeeInfo generated by hbm2java
 */
@Entity
@Table(name = "employee_info", catalog = "anliantest", uniqueConstraints = @UniqueConstraint(columnNames = "employee_number"))
public class EmployeeInfo implements java.io.Serializable {

	private Integer employeeId;
	private DepartmentInfo departmentInfo;
	private String employeeNumber;
	private String employeeName;
	private String employeePassword;
	private String employeeTitle;
	private String employeeAvatar;
	private Set<TestReportTable> testReportTablesForSignerId = new HashSet<TestReportTable>(
			0);
	private Set<TestReportTable> testReportTablesForPreparerId = new HashSet<TestReportTable>(
			0);
	private Set<ProjectInfo> projectInfosForBusinessEmployeeId = new HashSet<ProjectInfo>(
			0);
	private Set<TestDataProcessTable> testDataProcessTablesForReviewerId = new HashSet<TestDataProcessTable>(
			0);
	private Set<TestDataProcessTable> testDataProcessTablesForCalculaterId = new HashSet<TestDataProcessTable>(
			0);
	private Set<SamplePlanTable> samplePlanTablesForPlanReviewEmployeeId = new HashSet<SamplePlanTable>(
			0);
	private Set<TestReportTable> testReportTablesForReviewerId = new HashSet<TestReportTable>(
			0);
	private Set<ProjectInfo> projectInfosForProjectEmployeeId = new HashSet<ProjectInfo>(
			0);
	private Set<WorkTaskTable> workTaskTables = new HashSet<WorkTaskTable>(0);
	private Set<ContractReviewRecordTable> contractReviewRecordTables = new HashSet<ContractReviewRecordTable>(
			0);
	private Set<SamplePlanTable> samplePlanTablesForPlanWriteEmployeeId = new HashSet<SamplePlanTable>(
			0);

	public EmployeeInfo() {
	}

	public EmployeeInfo(String employeeNumber, String employeeName,
			String employeePassword) {
		this.employeeNumber = employeeNumber;
		this.employeeName = employeeName;
		this.employeePassword = employeePassword;
	}

	public EmployeeInfo(DepartmentInfo departmentInfo, String employeeNumber,
			String employeeName, String employeePassword, String employeeTitle,
			String employeeAvatar,
			Set<TestReportTable> testReportTablesForSignerId,
			Set<TestReportTable> testReportTablesForPreparerId,
			Set<ProjectInfo> projectInfosForBusinessEmployeeId,
			Set<TestDataProcessTable> testDataProcessTablesForReviewerId,
			Set<TestDataProcessTable> testDataProcessTablesForCalculaterId,
			Set<SamplePlanTable> samplePlanTablesForPlanReviewEmployeeId,
			Set<TestReportTable> testReportTablesForReviewerId,
			Set<ProjectInfo> projectInfosForProjectEmployeeId,
			Set<WorkTaskTable> workTaskTables,
			Set<ContractReviewRecordTable> contractReviewRecordTables,
			Set<SamplePlanTable> samplePlanTablesForPlanWriteEmployeeId) {
		this.departmentInfo = departmentInfo;
		this.employeeNumber = employeeNumber;
		this.employeeName = employeeName;
		this.employeePassword = employeePassword;
		this.employeeTitle = employeeTitle;
		this.employeeAvatar = employeeAvatar;
		this.testReportTablesForSignerId = testReportTablesForSignerId;
		this.testReportTablesForPreparerId = testReportTablesForPreparerId;
		this.projectInfosForBusinessEmployeeId = projectInfosForBusinessEmployeeId;
		this.testDataProcessTablesForReviewerId = testDataProcessTablesForReviewerId;
		this.testDataProcessTablesForCalculaterId = testDataProcessTablesForCalculaterId;
		this.samplePlanTablesForPlanReviewEmployeeId = samplePlanTablesForPlanReviewEmployeeId;
		this.testReportTablesForReviewerId = testReportTablesForReviewerId;
		this.projectInfosForProjectEmployeeId = projectInfosForProjectEmployeeId;
		this.workTaskTables = workTaskTables;
		this.contractReviewRecordTables = contractReviewRecordTables;
		this.samplePlanTablesForPlanWriteEmployeeId = samplePlanTablesForPlanWriteEmployeeId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "employee_id", unique = true, nullable = false)
	public Integer getEmployeeId() {
		return this.employeeId;
	}

	public void setEmployeeId(Integer employeeId) {
		this.employeeId = employeeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "department_id")
	public DepartmentInfo getDepartmentInfo() {
		return this.departmentInfo;
	}

	public void setDepartmentInfo(DepartmentInfo departmentInfo) {
		this.departmentInfo = departmentInfo;
	}

	@Column(name = "employee_number", unique = true, nullable = false, length = 45)
	public String getEmployeeNumber() {
		return this.employeeNumber;
	}

	public void setEmployeeNumber(String employeeNumber) {
		this.employeeNumber = employeeNumber;
	}

	@Column(name = "employee_name", nullable = false, length = 45)
	public String getEmployeeName() {
		return this.employeeName;
	}

	public void setEmployeeName(String employeeName) {
		this.employeeName = employeeName;
	}

	@Column(name = "employee_password", nullable = false, length = 45)
	public String getEmployeePassword() {
		return this.employeePassword;
	}

	public void setEmployeePassword(String employeePassword) {
		this.employeePassword = employeePassword;
	}

	@Column(name = "employee_title", length = 45)
	public String getEmployeeTitle() {
		return this.employeeTitle;
	}

	public void setEmployeeTitle(String employeeTitle) {
		this.employeeTitle = employeeTitle;
	}

	@Column(name = "employee_avatar")
	public String getEmployeeAvatar() {
		return this.employeeAvatar;
	}

	public void setEmployeeAvatar(String employeeAvatar) {
		this.employeeAvatar = employeeAvatar;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfoBySignerId")
	public Set<TestReportTable> getTestReportTablesForSignerId() {
		return this.testReportTablesForSignerId;
	}

	public void setTestReportTablesForSignerId(
			Set<TestReportTable> testReportTablesForSignerId) {
		this.testReportTablesForSignerId = testReportTablesForSignerId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfoByPreparerId")
	public Set<TestReportTable> getTestReportTablesForPreparerId() {
		return this.testReportTablesForPreparerId;
	}

	public void setTestReportTablesForPreparerId(
			Set<TestReportTable> testReportTablesForPreparerId) {
		this.testReportTablesForPreparerId = testReportTablesForPreparerId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfoByBusinessEmployeeId")
	public Set<ProjectInfo> getProjectInfosForBusinessEmployeeId() {
		return this.projectInfosForBusinessEmployeeId;
	}

	public void setProjectInfosForBusinessEmployeeId(
			Set<ProjectInfo> projectInfosForBusinessEmployeeId) {
		this.projectInfosForBusinessEmployeeId = projectInfosForBusinessEmployeeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfoByReviewerId")
	public Set<TestDataProcessTable> getTestDataProcessTablesForReviewerId() {
		return this.testDataProcessTablesForReviewerId;
	}

	public void setTestDataProcessTablesForReviewerId(
			Set<TestDataProcessTable> testDataProcessTablesForReviewerId) {
		this.testDataProcessTablesForReviewerId = testDataProcessTablesForReviewerId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfoByCalculaterId")
	public Set<TestDataProcessTable> getTestDataProcessTablesForCalculaterId() {
		return this.testDataProcessTablesForCalculaterId;
	}

	public void setTestDataProcessTablesForCalculaterId(
			Set<TestDataProcessTable> testDataProcessTablesForCalculaterId) {
		this.testDataProcessTablesForCalculaterId = testDataProcessTablesForCalculaterId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfoByPlanReviewEmployeeId")
	public Set<SamplePlanTable> getSamplePlanTablesForPlanReviewEmployeeId() {
		return this.samplePlanTablesForPlanReviewEmployeeId;
	}

	public void setSamplePlanTablesForPlanReviewEmployeeId(
			Set<SamplePlanTable> samplePlanTablesForPlanReviewEmployeeId) {
		this.samplePlanTablesForPlanReviewEmployeeId = samplePlanTablesForPlanReviewEmployeeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfoByReviewerId")
	public Set<TestReportTable> getTestReportTablesForReviewerId() {
		return this.testReportTablesForReviewerId;
	}

	public void setTestReportTablesForReviewerId(
			Set<TestReportTable> testReportTablesForReviewerId) {
		this.testReportTablesForReviewerId = testReportTablesForReviewerId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfoByProjectEmployeeId")
	public Set<ProjectInfo> getProjectInfosForProjectEmployeeId() {
		return this.projectInfosForProjectEmployeeId;
	}

	public void setProjectInfosForProjectEmployeeId(
			Set<ProjectInfo> projectInfosForProjectEmployeeId) {
		this.projectInfosForProjectEmployeeId = projectInfosForProjectEmployeeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfo")
	public Set<WorkTaskTable> getWorkTaskTables() {
		return this.workTaskTables;
	}

	public void setWorkTaskTables(Set<WorkTaskTable> workTaskTables) {
		this.workTaskTables = workTaskTables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfo")
	public Set<ContractReviewRecordTable> getContractReviewRecordTables() {
		return this.contractReviewRecordTables;
	}

	public void setContractReviewRecordTables(
			Set<ContractReviewRecordTable> contractReviewRecordTables) {
		this.contractReviewRecordTables = contractReviewRecordTables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeInfoByPlanWriteEmployeeId")
	public Set<SamplePlanTable> getSamplePlanTablesForPlanWriteEmployeeId() {
		return this.samplePlanTablesForPlanWriteEmployeeId;
	}

	public void setSamplePlanTablesForPlanWriteEmployeeId(
			Set<SamplePlanTable> samplePlanTablesForPlanWriteEmployeeId) {
		this.samplePlanTablesForPlanWriteEmployeeId = samplePlanTablesForPlanWriteEmployeeId;
	}

}
